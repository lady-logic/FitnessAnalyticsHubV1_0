name: .NET CI/CD

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: 🚚 Checkout Code
      uses: actions/checkout@v3
      
    - name: 🔧 Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'
        
    - name: 📦 Restore Dependencies
      run: dotnet restore
      
    - name: 🏗️ Build Solution (ohne WPF)
      run: dotnet build --no-restore --configuration Release --property:TargetFramework=net8.0 --ignore-failed-sources
      
    - name: ✅ Run Unit Tests
      run: dotnet test --no-build --configuration Release --verbosity normal --collect:"XPlat Code Coverage" --filter "Category!=Architecture"
      
    - name: 🏛️ Run Architecture Tests
      run: dotnet test --no-build --configuration Release --verbosity normal --filter "Category=Architecture"
      
    - name: 📊 Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: "**/TestResults/**/*.xml"
        
    - name: 📈 Upload Code Coverage
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: code-coverage
        path: "**/TestResults/**/coverage.cobertura.xml"
    
  # SonarCloud Code Quality Analysis
  sonarcloud:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'push'
    
    steps:
    - name: 🚚 Checkout Code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Shallow clones sollten für eine bessere Relevanz der Analyse deaktiviert werden
        
    - name: 🔧 Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'
        
    - name: 🔍 Install SonarCloud Scanner
      run: dotnet tool install --global dotnet-sonarscanner
      
    - name: 📦 Restore Dependencies
      run: dotnet restore
      
    - name: 🔬 SonarCloud Analysis
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        dotnet clean
        dotnet sonarscanner begin /k:"lady-logic_FitnessAnalyticsHubV1_0" /o:"lady-logic" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.cs.opencover.reportsPaths="**/TestResults/**/coverage.opencover.xml"
        dotnet build --configuration Release
        dotnet test --configuration Release --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
        dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
      
